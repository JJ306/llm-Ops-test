# name: Kubernetes Deployment
name: deploy to AKS

on:
  push:
    branches:
      - janak/test/offline_ai_model

env:
  IMAGE_TAG: ${{github.sha}}

jobs:
  build-and-deploy:
    environment: DOCKER_LOGIN
    runs-on: ubuntu-latest      

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: docker build
      run: docker build -t llm-apps-aks-demo:'${{github.sha}}' .

    - name: docker login
      run: docker login --username '${{secrets.DOCKER_LOGIN}}' --password '${{secrets.DOCKER_PASSWORD}}'

    - name: tag docker image
      run: docker tag llm-apps-aks-demo:'${{github.sha}}' '${{secrets.DOCKER_LOGIN}}'/llm-apps-aks-demo:'${{github.sha}}'
    
    - name: push docker image
      run: docker push '${{secrets.DOCKER_LOGIN}}'/llm-apps-aks-demo:'${{github.sha}}'
    
    - name: Read Docker login
      run: echo '${{secrets.DOCKER_LOGIN}}'
    
    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # - name: Azure CLI script
    #   uses: azure/CLI@v1
    #   with:
    #     azcliversion: latest
    #     inlineScript: |
    #       az account show

    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v3
      with:
        # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
        creds: ${{secrets.AZURE_CREDENTIALS}}
        # Resource Group Name
        resource-group: test-aks-cluster-rg
        # AKS Cluster Name
        cluster-name: test-aks-cluster

  # Create K8s secrets to pull images
    - name: Create a secret in Kubernetes cluster
      uses: Azure/k8s-create-secret@v4
      with:
        # Container registry url
        container-registry-url: https://index.docker.io/v1/
        # Container registry username
        container-registry-username: '${{secrets.DOCKER_LOGIN}}'
        # Container registry password
        container-registry-password:  '${{secrets.DOCKER_PASSWORD}}'
        # Type of Kubernetes secret. For example, docker-registry or generic
        secret-type: docker-registry
        # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
        secret-name: docker-image-pull-secret
    
    # - name: create kuberneters namespace
      # run: kubectl create namespace ingress-test

    # Installing NGINX Ingress Controller using Helm
    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: 'v3.13.0'
        
    # - name: Check if namespace exists
    #   id: check_namespace
    #   run: |
    #     if kubectl get namespace ingress-test &>/dev/null; then
    #       echo "::set-output name=exists::true"
    #     else
    #       echo "::set-output name=exists::false"
    #     fi

    # - name: Add Helm repository for externalDNS
    #   run: helm repo add bitnami https://charts.bitnami.com/bitnami
    
    # - name: Update Helm externalDNS repositories
    #   run: helm repo update

    # - name: Use Helm to deploy an External DNS
    #   run: helm install external-dns bitnami/external-dns \
    #        --namespace ingress-test \ 
    #        --set provider=azure \ 
    #        --set txtOwnerId=aksdemocluster \ 
    #        --set policy=sync \ 
    #        --set azure.resourceGroup=aksdemocluster-rg \ 
    #        --set azure.tenantId=$tenantid \ 
    #        --set azure.subscriptionId=$subscriptionid \ 
    #        --set azure.useManagedIdentityExtension=true \
    #        --set azure.userAssignedIdentityID=$UserClientId

    # - name: Add Helm repository
    #   run: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
      
    # - name: Update Helm repositories
    #   run: helm repo update
   
    # - name: Install Helm Chart for NGINX Ingress Controller
    #   # if: steps.check_namespace.outputs.namespace_exists != 'true'
    #   run: |
    #     helm install nginx-ingress ingress-nginx/ingress-nginx \
    #     --namespace ingress-test \
    #     --create-namespace \
    #     --set controller.service.type=LoadBalancer \
    #     --set controller.publishService.enabled=true \
    #     --set controller.replicaCount=1
    #     # --set controller.nodeSelector."beta\.kubernetes\.io/os"=linus \ 
    #     # --set defaultBackend.nodeSelector."beta\.kubernetes\.io/os"=linux \ 
    #     # --set controller.service.externalTrafficPolicy=Local \
    #     # --set controller.ingressClass=nginx-test

    - name: Label the cert-manager namespace to disable resource validation
      run: kubectl label namespace ingress-test cert-manager.io/disable-validation=true

    - name: Inject GitHub SHA into Deployment YAML
      run: sed -i "s/{{IMAGE_TAG}}/${{ github.sha }}/g" kube_templates/deployment_test_chat_app.yaml

    # Deploy to k8s cluster
    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v4.9
      with:
        namespace: ingress-test 
        # Path to the manifest files which will be used for deployment.
        manifests: |
          kube_templates/deployment_test_chat_app.yaml
          kube_templates/service_test_chat_app.yaml
          kube_templates/ingress.yaml
        # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
        images: '${{secrets.DOCKER_LOGIN}}/llm-apps-aks-demo:${{github.sha}}'
        # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
        imagepullsecrets: docker-image-pull-secret
        # deploy/promote/reject
        action: deploy
